//
//  BasicStrategy+Extension.swift
//  BlackJackPracticeStrategyGame
//
//  Created by JON on 7/20/21.
//

import Foundation

extension BasicStrategy {
    static func ruleLookup(type: RuleType, dealerCardValue: Int, playerRuleValue: Int) -> Rule {
        let array: [Rule] = type == .pair ? pairRules : type == .soft ? softRules : hardRules
        let rule = array.first(where: { $0.dealerCardValue == dealerCardValue && $0.playerRuleValue == playerRuleValue /*&& $0.deviation != nil*/})
        return rule!
    }
    
    static var pairRules: [Rule] {
        return [
            Rule(type: .pair, dealerCardValue: 2, playerRuleValue: 1, action: .split),
            Rule(type: .pair, dealerCardValue: 3, playerRuleValue: 1, action: .split),
            Rule(type: .pair, dealerCardValue: 4, playerRuleValue: 1, action: .split),
            Rule(type: .pair, dealerCardValue: 5, playerRuleValue: 1, action: .split),
            Rule(type: .pair, dealerCardValue: 6, playerRuleValue: 1, action: .split),
            Rule(type: .pair, dealerCardValue: 7, playerRuleValue: 1, action: .split),
            Rule(type: .pair, dealerCardValue: 8, playerRuleValue: 1, action: .split),
            Rule(type: .pair, dealerCardValue: 9, playerRuleValue: 1, action: .split),
            Rule(type: .pair, dealerCardValue: 10, playerRuleValue: 1, action: .split),
            Rule(type: .pair, dealerCardValue: 1, playerRuleValue: 1, action: .split),
            
            Rule(type: .pair, dealerCardValue: 2, playerRuleValue: 10, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 3, playerRuleValue: 10, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 4, playerRuleValue: 10, action: .doNotSplit, deviations: [Deviation(type: .hard17, count: 6, direction: "+", action: .split)]),
            Rule(type: .pair, dealerCardValue: 5, playerRuleValue: 10, action: .doNotSplit, deviations: [Deviation(type: .hard17, count: 5, direction: "+", action: .split)]),
            Rule(type: .pair, dealerCardValue: 6, playerRuleValue: 10, action: .doNotSplit, deviations: [Deviation(type: .hard17, count: 4, direction: "+", action: .split)]),
            Rule(type: .pair, dealerCardValue: 7, playerRuleValue: 10, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 8, playerRuleValue: 10, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 9, playerRuleValue: 10, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 10, playerRuleValue: 10, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 1, playerRuleValue: 10, action: .doNotSplit),
            
            Rule(type: .pair, dealerCardValue: 2, playerRuleValue: 9, action: .split),
            Rule(type: .pair, dealerCardValue: 3, playerRuleValue: 9, action: .split),
            Rule(type: .pair, dealerCardValue: 4, playerRuleValue: 9, action: .split),
            Rule(type: .pair, dealerCardValue: 5, playerRuleValue: 9, action: .split),
            Rule(type: .pair, dealerCardValue: 6, playerRuleValue: 9, action: .split),
            Rule(type: .pair, dealerCardValue: 7, playerRuleValue: 9, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 8, playerRuleValue: 9, action: .split),
            Rule(type: .pair, dealerCardValue: 9, playerRuleValue: 9, action: .split),
            Rule(type: .pair, dealerCardValue: 10, playerRuleValue: 9, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 1, playerRuleValue: 9, action: .doNotSplit),
            
            Rule(type: .pair, dealerCardValue: 2, playerRuleValue: 8, action: .split),
            Rule(type: .pair, dealerCardValue: 3, playerRuleValue: 8, action: .split),
            Rule(type: .pair, dealerCardValue: 4, playerRuleValue: 8, action: .split),
            Rule(type: .pair, dealerCardValue: 5, playerRuleValue: 8, action: .split),
            Rule(type: .pair, dealerCardValue: 6, playerRuleValue: 8, action: .split),
            Rule(type: .pair, dealerCardValue: 7, playerRuleValue: 8, action: .split),
            Rule(type: .pair, dealerCardValue: 8, playerRuleValue: 8, action: .split),
            Rule(type: .pair, dealerCardValue: 9, playerRuleValue: 8, action: .split),
            Rule(type: .pair, dealerCardValue: 10, playerRuleValue: 8, action: .split),
            Rule(type: .pair, dealerCardValue: 1, playerRuleValue: 8, action: .split),
            
            Rule(type: .pair, dealerCardValue: 2, playerRuleValue: 7, action: .split),
            Rule(type: .pair, dealerCardValue: 3, playerRuleValue: 7, action: .split),
            Rule(type: .pair, dealerCardValue: 4, playerRuleValue: 7, action: .split),
            Rule(type: .pair, dealerCardValue: 5, playerRuleValue: 7, action: .split),
            Rule(type: .pair, dealerCardValue: 6, playerRuleValue: 7, action: .split),
            Rule(type: .pair, dealerCardValue: 7, playerRuleValue: 7, action: .split),
            Rule(type: .pair, dealerCardValue: 8, playerRuleValue: 7, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 9, playerRuleValue: 7, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 10, playerRuleValue: 7, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 1, playerRuleValue: 7, action: .doNotSplit),
            
            Rule(type: .pair, dealerCardValue: 2, playerRuleValue: 6, action: .splitIfDAS),
            Rule(type: .pair, dealerCardValue: 3, playerRuleValue: 6, action: .split),
            Rule(type: .pair, dealerCardValue: 4, playerRuleValue: 6, action: .split),
            Rule(type: .pair, dealerCardValue: 5, playerRuleValue: 6, action: .split),
            Rule(type: .pair, dealerCardValue: 6, playerRuleValue: 6, action: .split),
            Rule(type: .pair, dealerCardValue: 7, playerRuleValue: 6, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 8, playerRuleValue: 6, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 9, playerRuleValue: 6, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 10, playerRuleValue: 6, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 1, playerRuleValue: 6, action: .doNotSplit),
            
            Rule(type: .pair, dealerCardValue: 2, playerRuleValue: 5, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 3, playerRuleValue: 5, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 4, playerRuleValue: 5, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 5, playerRuleValue: 5, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 6, playerRuleValue: 5, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 7, playerRuleValue: 5, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 8, playerRuleValue: 5, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 9, playerRuleValue: 5, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 10, playerRuleValue: 5, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 1, playerRuleValue: 5, action: .doNotSplit),
            
            Rule(type: .pair, dealerCardValue: 2, playerRuleValue: 4, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 3, playerRuleValue: 4, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 4, playerRuleValue: 4, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 5, playerRuleValue: 4, action: .splitIfDAS),
            Rule(type: .pair, dealerCardValue: 6, playerRuleValue: 4, action: .splitIfDAS),
            Rule(type: .pair, dealerCardValue: 7, playerRuleValue: 4, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 8, playerRuleValue: 4, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 9, playerRuleValue: 4, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 10, playerRuleValue: 4, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 1, playerRuleValue: 4, action: .doNotSplit),
            
            Rule(type: .pair, dealerCardValue: 2, playerRuleValue: 3, action: .splitIfDAS),
            Rule(type: .pair, dealerCardValue: 3, playerRuleValue: 3, action: .splitIfDAS),
            Rule(type: .pair, dealerCardValue: 4, playerRuleValue: 3, action: .split),
            Rule(type: .pair, dealerCardValue: 5, playerRuleValue: 3, action: .split),
            Rule(type: .pair, dealerCardValue: 6, playerRuleValue: 3, action: .split),
            Rule(type: .pair, dealerCardValue: 7, playerRuleValue: 3, action: .split),
            Rule(type: .pair, dealerCardValue: 8, playerRuleValue: 3, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 9, playerRuleValue: 3, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 10, playerRuleValue: 3, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 1, playerRuleValue: 3, action: .doNotSplit),
            
            Rule(type: .pair, dealerCardValue: 2, playerRuleValue: 2, action: .splitIfDAS),
            Rule(type: .pair, dealerCardValue: 3, playerRuleValue: 2, action: .splitIfDAS),
            Rule(type: .pair, dealerCardValue: 4, playerRuleValue: 2, action: .split),
            Rule(type: .pair, dealerCardValue: 5, playerRuleValue: 2, action: .split),
            Rule(type: .pair, dealerCardValue: 6, playerRuleValue: 2, action: .split),
            Rule(type: .pair, dealerCardValue: 7, playerRuleValue: 2, action: .split),
            Rule(type: .pair, dealerCardValue: 8, playerRuleValue: 2, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 9, playerRuleValue: 2, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 10, playerRuleValue: 2, action: .doNotSplit),
            Rule(type: .pair, dealerCardValue: 1, playerRuleValue: 2, action: .doNotSplit)
        ]
    }
    
    static var softRules: [Rule] {
        return [ // ace is implied
            Rule(type: .soft, dealerCardValue: 2, playerRuleValue: 10, action: .stand),
            Rule(type: .soft, dealerCardValue: 3, playerRuleValue: 10, action: .stand),
            Rule(type: .soft, dealerCardValue: 4, playerRuleValue: 10, action: .stand),
            Rule(type: .soft, dealerCardValue: 5, playerRuleValue: 10, action: .stand),
            Rule(type: .soft, dealerCardValue: 6, playerRuleValue: 10, action: .stand),
            Rule(type: .soft, dealerCardValue: 7, playerRuleValue: 10, action: .stand),
            Rule(type: .soft, dealerCardValue: 8, playerRuleValue: 10, action: .stand),
            Rule(type: .soft, dealerCardValue: 9, playerRuleValue: 10, action: .stand),
            Rule(type: .soft, dealerCardValue: 10,playerRuleValue: 10, action: .stand),
            Rule(type: .soft, dealerCardValue: 1, playerRuleValue: 10, action: .stand),
            
            Rule(type: .soft, dealerCardValue: 2, playerRuleValue: 9, action: .stand),
            Rule(type: .soft, dealerCardValue: 3, playerRuleValue: 9, action: .stand),
            Rule(type: .soft, dealerCardValue: 4, playerRuleValue: 9, action: .stand),
            Rule(type: .soft, dealerCardValue: 5, playerRuleValue: 9, action: .stand),
            Rule(type: .soft, dealerCardValue: 6, playerRuleValue: 9, action: .stand),
            Rule(type: .soft, dealerCardValue: 7, playerRuleValue: 9, action: .stand),
            Rule(type: .soft, dealerCardValue: 8, playerRuleValue: 9, action: .stand),
            Rule(type: .soft, dealerCardValue: 9, playerRuleValue: 9, action: .stand),
            Rule(type: .soft, dealerCardValue: 10,playerRuleValue: 9, action: .stand),
            Rule(type: .soft, dealerCardValue: 1, playerRuleValue: 9, action: .stand),
            
            Rule(type: .soft, dealerCardValue: 2, playerRuleValue: 8, action: .stand),
            Rule(type: .soft, dealerCardValue: 3, playerRuleValue: 8, action: .stand),
            Rule(type: .soft, dealerCardValue: 4, playerRuleValue: 8, action: .stand, deviations: [Deviation(type: .hard17, count: 3, direction: "+", action: .doubleStand)]),
            Rule(type: .soft, dealerCardValue: 5, playerRuleValue: 8, action: .stand, deviations: [Deviation(type: .hard17, count: 1, direction: "+", action: .doubleStand)]),
            Rule(type: .soft, dealerCardValue: 6, playerRuleValue: 8, action: .doubleStand, deviations: [Deviation(type: .hard17, count: 0, direction: "-", action: .stand)]),
            Rule(type: .soft, dealerCardValue: 7, playerRuleValue: 8, action: .stand),
            Rule(type: .soft, dealerCardValue: 8, playerRuleValue: 8, action: .stand),
            Rule(type: .soft, dealerCardValue: 9, playerRuleValue: 8, action: .stand),
            Rule(type: .soft, dealerCardValue: 10,playerRuleValue: 8, action: .stand),
            Rule(type: .soft, dealerCardValue: 1, playerRuleValue: 8, action: .stand),
            
            Rule(type: .soft, dealerCardValue: 2, playerRuleValue: 7, action: .doubleStand),
            Rule(type: .soft, dealerCardValue: 3, playerRuleValue: 7, action: .doubleStand),
            Rule(type: .soft, dealerCardValue: 4, playerRuleValue: 7, action: .doubleStand),
            Rule(type: .soft, dealerCardValue: 5, playerRuleValue: 7, action: .doubleStand),
            Rule(type: .soft, dealerCardValue: 6, playerRuleValue: 7, action: .doubleStand),
            Rule(type: .soft, dealerCardValue: 7, playerRuleValue: 7, action: .stand),
            Rule(type: .soft, dealerCardValue: 8, playerRuleValue: 7, action: .stand),
            Rule(type: .soft, dealerCardValue: 9, playerRuleValue: 7, action: .hit),
            Rule(type: .soft, dealerCardValue: 10,playerRuleValue: 7, action: .hit),
            Rule(type: .soft, dealerCardValue: 1, playerRuleValue: 7, action: .hit),
            
            Rule(type: .soft, dealerCardValue: 2, playerRuleValue: 6, action: .hit, deviations: [Deviation(type: .hard17, count: 1, direction: "+", action: .doubleHit)]),
            Rule(type: .soft, dealerCardValue: 3, playerRuleValue: 6, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 4, playerRuleValue: 6, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 5, playerRuleValue: 6, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 6, playerRuleValue: 6, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 7, playerRuleValue: 6, action: .hit),
            Rule(type: .soft, dealerCardValue: 8, playerRuleValue: 6, action: .hit),
            Rule(type: .soft, dealerCardValue: 9, playerRuleValue: 6, action: .hit),
            Rule(type: .soft, dealerCardValue: 10,playerRuleValue: 6, action: .hit),
            Rule(type: .soft, dealerCardValue: 1, playerRuleValue: 6, action: .hit),
            
            Rule(type: .soft, dealerCardValue: 2, playerRuleValue: 5, action: .hit),
            Rule(type: .soft, dealerCardValue: 3, playerRuleValue: 5, action: .hit),
            Rule(type: .soft, dealerCardValue: 4, playerRuleValue: 5, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 5, playerRuleValue: 5, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 6, playerRuleValue: 5, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 7, playerRuleValue: 5, action: .hit),
            Rule(type: .soft, dealerCardValue: 8, playerRuleValue: 5, action: .hit),
            Rule(type: .soft, dealerCardValue: 9, playerRuleValue: 5, action: .hit),
            Rule(type: .soft, dealerCardValue: 10,playerRuleValue: 5, action: .hit),
            Rule(type: .soft, dealerCardValue: 1, playerRuleValue: 5, action: .hit),
            
            Rule(type: .soft, dealerCardValue: 2, playerRuleValue: 4, action: .hit),
            Rule(type: .soft, dealerCardValue: 3, playerRuleValue: 4, action: .hit),
            Rule(type: .soft, dealerCardValue: 4, playerRuleValue: 4, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 5, playerRuleValue: 4, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 6, playerRuleValue: 4, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 7, playerRuleValue: 4, action: .hit),
            Rule(type: .soft, dealerCardValue: 8, playerRuleValue: 4, action: .hit),
            Rule(type: .soft, dealerCardValue: 9, playerRuleValue: 4, action: .hit),
            Rule(type: .soft, dealerCardValue: 10,playerRuleValue: 4, action: .hit),
            Rule(type: .soft, dealerCardValue: 1, playerRuleValue: 4, action: .hit),
            
            Rule(type: .soft, dealerCardValue: 2, playerRuleValue: 3, action: .hit),
            Rule(type: .soft, dealerCardValue: 3, playerRuleValue: 3, action: .hit),
            Rule(type: .soft, dealerCardValue: 4, playerRuleValue: 3, action: .hit),
            Rule(type: .soft, dealerCardValue: 5, playerRuleValue: 3, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 6, playerRuleValue: 3, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 7, playerRuleValue: 3, action: .hit),
            Rule(type: .soft, dealerCardValue: 8, playerRuleValue: 3, action: .hit),
            Rule(type: .soft, dealerCardValue: 9, playerRuleValue: 3, action: .hit),
            Rule(type: .soft, dealerCardValue: 10,playerRuleValue: 3, action: .hit),
            Rule(type: .soft, dealerCardValue: 1, playerRuleValue: 3, action: .hit),
            
            Rule(type: .soft, dealerCardValue: 2, playerRuleValue: 2, action: .hit),
            Rule(type: .soft, dealerCardValue: 3, playerRuleValue: 2, action: .hit),
            Rule(type: .soft, dealerCardValue: 4, playerRuleValue: 2, action: .hit),
            Rule(type: .soft, dealerCardValue: 5, playerRuleValue: 2, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 6, playerRuleValue: 2, action: .doubleHit),
            Rule(type: .soft, dealerCardValue: 7, playerRuleValue: 2, action: .hit),
            Rule(type: .soft, dealerCardValue: 8, playerRuleValue: 2, action: .hit),
            Rule(type: .soft, dealerCardValue: 9, playerRuleValue: 2, action: .hit),
            Rule(type: .soft, dealerCardValue: 10,playerRuleValue: 2, action: .hit),
            Rule(type: .soft, dealerCardValue: 1, playerRuleValue: 2, action: .hit),
        ]
    }
    
    static var hardRules: [Rule] {
        return [
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 18, action: .stand),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 18, action: .stand),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 18, action: .stand),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 18, action: .stand),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 18, action: .stand),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 18, action: .stand),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 18, action: .stand),
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 18, action: .stand),
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 18, action: .stand),
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 18, action: .stand),
                 
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 17, action: .stand),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 17, action: .stand),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 17, action: .stand),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 17, action: .stand),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 17, action: .stand),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 17, action: .stand),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 17, action: .stand),
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 17, action: .stand),
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 17, action: .stand),
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 17, action: .stand, surrender: Surrender(false, deviations: [Deviation(type: .hard17, count: nil, direction: nil, action: .surrender)])),
            
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 16, action: .stand),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 16, action: .stand),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 16, action: .stand),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 16, action: .stand),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 16, action: .stand),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 16, action: .hit),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 16, action: .hit, surrender: Surrender(false, deviations: [Deviation(type: .hard17, count: 4, direction: "+", action: .surrender)])),
            
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 16, action: .hit, deviations: [Deviation(type: .hard17, count: 4, direction: "+", action: .stand)], surrender: Surrender(true, deviations: [Deviation(type: .hard17, count: -1, direction: "-", action: .hit)])),
            
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 16, action: .hit, deviations: [Deviation(type: .hard17, count: 0, direction: "+", action: .stand)], surrender: Surrender(true)),
            
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 16, action: .hit, deviations: [Deviation(type: .hard17, count: 3, direction: "+", action: .stand)], surrender: Surrender(true)),
            
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 15, action: .stand),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 15, action: .stand),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 15, action: .stand),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 15, action: .stand),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 15, action: .stand),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 15, action: .hit),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 15, action: .hit),
            
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 15, action: .hit, surrender: Surrender(false, deviations: [Deviation(type: .hard17, count: 2, direction: "+", action: .surrender)])),
            
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 15, action: .hit, deviations: [Deviation(type: .hard17, count: 4, direction: "+", action: .stand)], surrender: Surrender(true, deviations: [Deviation(type: .hard17, count: 0, direction: "-", action: .hit)])),
            
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 15, action: .hit, deviations: [Deviation(type: .hard17, count: 5, direction: "+", action: .stand)], surrender: Surrender(false, deviations: [Deviation(type: .hard17, count: -1, direction: "+", action: .surrender)])),
            
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 14, action: .stand),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 14, action: .stand),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 14, action: .stand),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 14, action: .stand),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 14, action: .stand),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 14, action: .hit),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 14, action: .hit),
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 14, action: .hit),
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 14, action: .hit),
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 14, action: .hit),
            
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 13, action: .stand),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 13, action: .stand),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 13, action: .stand),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 13, action: .stand),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 13, action: .stand),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 13, action: .hit),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 13, action: .hit),
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 13, action: .hit),
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 13, action: .hit),
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 13, action: .hit),
            
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 12, action: .hit),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 12, action: .hit),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 12, action: .stand),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 12, action: .stand),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 12, action: .stand),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 12, action: .hit),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 12, action: .hit),
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 12, action: .hit),
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 12, action: .hit),
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 12, action: .hit),
            
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 11, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 11, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 11, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 11, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 11, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 11, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 11, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 11, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 11, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 11, action: .doubleHit),
            
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 10, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 10, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 10, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 10, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 10, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 10, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 10, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 10, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 10, action: .hit, deviations: [Deviation(type: .hard17, count: 4, direction: "+", action: .doubleHit)]),
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 10, action: .hit, deviations: [Deviation(type: .hard17, count: 3, direction: "+", action: .doubleHit)]),
            
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 9, action: .hit, deviations: [Deviation(type: .hard17, count: 1, direction: "+", action: .doubleHit)]),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 9, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 9, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 9, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 9, action: .doubleHit),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 9, action: .hit, deviations: [Deviation(type: .hard17, count: 3, direction: "+", action: .doubleHit)]),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 9, action: .hit),
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 9, action: .hit),
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 9, action: .hit),
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 9, action: .hit),
            
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 8, action: .hit),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 8, action: .hit),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 8, action: .hit),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 8, action: .hit),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 8, action: .hit, deviations: [Deviation(type: .hard17, count: 2, direction: "+", action: .doubleHit)]),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 8, action: .hit),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 8, action: .hit),
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 8, action: .hit),
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 8, action: .hit),
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 8, action: .hit),
            
            Rule(type: .hard, dealerCardValue: 2, playerRuleValue: 7, action: .hit),
            Rule(type: .hard, dealerCardValue: 3, playerRuleValue: 7, action: .hit),
            Rule(type: .hard, dealerCardValue: 4, playerRuleValue: 7, action: .hit),
            Rule(type: .hard, dealerCardValue: 5, playerRuleValue: 7, action: .hit),
            Rule(type: .hard, dealerCardValue: 6, playerRuleValue: 7, action: .hit),
            Rule(type: .hard, dealerCardValue: 7, playerRuleValue: 7, action: .hit),
            Rule(type: .hard, dealerCardValue: 8, playerRuleValue: 7, action: .hit),
            Rule(type: .hard, dealerCardValue: 9, playerRuleValue: 7, action: .hit),
            Rule(type: .hard, dealerCardValue: 10,playerRuleValue: 7, action: .hit),
            Rule(type: .hard, dealerCardValue: 1, playerRuleValue: 7, action: .hit),
        ]
    }
}
